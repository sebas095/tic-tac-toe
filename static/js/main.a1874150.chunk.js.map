{"version":3,"sources":["components/Square/Square.js","components/Board/Board.js","utils/index.js","components/Game/Game.js","App.js","index.js"],"names":["Square","value","onClick","className","BoardRow","children","Board","this","props","isWinner","squares","board","row","rows","col","index","push","key","includes","createBoard","Component","lines","calculateWinner","i","length","a","b","c","calculateWinnerIndex","Game","state","history","Array","fill","prevMove","stepNumber","xIsnext","isActive","checked","xIsNext","slice","current","setState","step","status","winner","moves","map","move","width","desc","Math","floor","jumpTo","reverse","handleClick","htmlFor","onChange","handleChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","id","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a1874150.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Square.css\";\n\nconst Square = ({ value, onClick, className }) => (\n  <button className={\"square\" + className} onClick={onClick}>\n    {value}\n  </button>\n);\n\nexport default Square;\n","import React, { Component } from \"react\";\nimport Square from \"../Square/Square\";\nimport \"./Board.css\";\n\nconst BoardRow = ({ children }) => <div className=\"board-row\">{children}</div>;\n\nexport class Board extends Component {\n  createBoard() {\n    const { isWinner, squares, onClick } = this.props;\n\n    let board = [];\n    for (let row = 0; row < 3; row++) {\n      let rows = [];\n      for (let col = 0; col < 3; col++) {\n        const index = row * 3 + col;\n        rows.push(\n          <Square\n            key={index}\n            value={squares[index]}\n            onClick={() => onClick(index)}\n            className={isWinner.includes(index) ? \" isWinner\" : \"\"}\n          />\n        );\n      }\n      board.push(<BoardRow key={\"row-\" + row}>{rows}</BoardRow>);\n    }\n\n    return board;\n  }\n\n  render() {\n    return <div>{this.createBoard()}</div>;\n  }\n}\n","const lines = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nexport function calculateWinner(squares) {\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nexport function calculateWinnerIndex(squares) {\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return [a, b, c];\n    }\n  }\n  return [null];\n}\n\nexport function isDraw(squares) {\n  const hasWinner = !!calculateWinner(squares);\n  return !hasWinner && !squares.includes(null);\n}\n\nexport function indexToRowCol(index, width) {\n  const row = Math.floor(index / width);\n  const col = index % width;\n\n  return [row, col];\n}\n","import React, { Component } from \"react\";\nimport { Board } from \"../Board/Board\";\nimport Switch from \"react-switch\";\nimport {\n  calculateWinner,\n  indexToRowCol,\n  calculateWinnerIndex,\n  isDraw\n} from \"../../utils\";\nimport \"./Game.css\";\n\nexport class Game extends Component {\n  state = {\n    history: [\n      {\n        squares: Array(9).fill(null),\n        prevMove: null\n      }\n    ],\n    stepNumber: 0,\n    xIsnext: true,\n    isActive: false,\n    checked: false\n  };\n\n  handleClick(i) {\n    const { xIsNext, stepNumber } = this.state;\n    const history = this.state.history.slice(0, stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = [...current.squares];\n\n    if (calculateWinner(squares) || squares[i]) return;\n\n    squares[i] = xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: [...history, { squares, prevMove: i }],\n      stepNumber: history.length,\n      xIsNext: !xIsNext,\n      isActive: false\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 1,\n      isActive: true\n    });\n  }\n\n  handleChange() {\n    this.setState({ checked: !this.state.checked });\n  }\n\n  render() {\n    const { history, stepNumber, isActive, checked } = this.state;\n    const current = history[stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    let moves = history.map((step, move) => {\n      const desc = move\n        ? \"Go to move #\" +\n          move +\n          ` in coords. (${indexToRowCol(step.prevMove, 3)})`\n        : \"Go to game start\";\n      return (\n        <li key={move}>\n          <button\n            className={`btn-history ${\n              isActive && stepNumber === move ? \"active\" : \"\"\n            }`}\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n\n    moves = checked ? moves.reverse() : moves;\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else if (isDraw(current.squares)) {\n      status = \"Draw!!!\";\n    } else {\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            isWinner={calculateWinnerIndex(current.squares)}\n            onClick={i => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <label htmlFor=\"material-switch\">\n            <Switch\n              checked={this.state.checked}\n              onChange={() => this.handleChange()}\n              onColor=\"#86d3ff\"\n              onHandleColor=\"#2693e6\"\n              handleDiameter={30}\n              uncheckedIcon={false}\n              checkedIcon={false}\n              boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n              activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n              height={20}\n              width={48}\n              className=\"react-switch\"\n              id=\"material-switch\"\n            />\n            <span className=\"game-reverse\"> Reverse </span>\n          </label>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Game } from \"./components/Game/Game\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Tic Tac Toe</h1>\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}